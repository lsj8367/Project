buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"  // 플러그인의 저장소
        }
    }
    dependencies {
        classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10"   // 플러그인 디펜던시
    }
}

plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

apply plugin: "com.ewerk.gradle.plugins.querydsl"

sourceCompatibility = JavaVersion.VERSION_11

jar {
    enabled = false
}

war {
    enabled = false
}

repositories {
    mavenCentral()
}

dependencies {
    implementation (
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.springframework.boot:spring-boot-starter-validation',
            'com.querydsl:querydsl-jpa',
            'com.querydsl:querydsl-sql:4.0.0',
            'org.mariadb.jdbc:mariadb-java-client',
            'commons-io:commons-io:2.6',
            'commons-fileupload:commons-fileupload:1.3.3',
            'javax.servlet:jstl',

            'org.apache.tomcat.embed:tomcat-embed-jasper',
            'org.projectlombok:lombok',
            'com.h2database:h2'
    )

    annotationProcessor (
            'org.projectlombok:lombok',
            'org.springframework.boot:spring-boot-configuration-processor'
    )

    testImplementation(
            'org.springframework.boot:spring-boot-starter-test',
            'com.h2database:h2'
    )

    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "junit", module: "junit"
    }
}

test {
    useJUnitPlatform()
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

tasks.withType(JavaCompile) {
    options.fork = true
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked"
    }
}
targetCompatibility = JavaVersion.VERSION_11
