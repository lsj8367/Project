<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><!-- xml에 제약 거는 것 -->

<mapper namespace="dev">
  <!-- ====================== RENTINFO ======================== -->
  <!-- 최근 대여 내역 3 리스트-->
  <select id="rent3list" resultType="rdto" parameterType="String">
    select ob_name, rent_no, date_format(rent_sdate, "%Y-%m-%d") as rent_sdate, date_format(rent_edate, "%Y-%m-%d") as rent_edate
    from oldbook
           left outer join rentinfo on ob_no = rent_no
    where rent_id = #{rent_id}
    order by rent_sdate desc limit 3
  </select>

  <!-- 전체 대여 내역 리스트-->
  <select id="rentlistall" resultType="rdto" parameterType="String">
    select ob_name, rent_no, date_format(rent_sdate, "%Y-%m-%d") as rent_sdate, date_format(rent_edate, "%Y-%m-%d") as rent_edate
    from oldbook
           left outer join rentinfo on ob_no = rent_no
    where rent_id = #{rent_id}
    order by rent_sdate desc
  </select>

  <!-- 중고책 대여했을 때 대여정보 추가 -->
  <insert id="rentOldBook" parameterType="rdto">
    insert into rentinfo
    values (#{rent_no}, #{rent_id}, #{rent_sd
		ate}, date_add(now(), INTERVAL 13 day), default)
  </insert>

  <select id="getRentInfo" parameterType="String" resultType="rdto">
    select rent_no, rent_id, date_format(rent_sdate, '%Y-%m-%d') as rent_sdate, date_format(rent_edate, '%Y-%m-%d') as rent_edate, rent_ecount
    from rentinfo
    where rent_id = #{rent_id}
    order by rent_sdate desc limit 1;
  </select>

  <!-- 대여도서 반납 -->
  <delete id="delrinf" parameterType="int">
    delete
    from rentinfo
    where rent_no = #{rent_no}
  </delete>

  <!-- 연장하기 버튼 -->
  <update id="uprent" parameterType="int">
    update rentinfo
    set rent_ecount="1",
        rent_edate = date_add(rent_edate, INTERVAL 6 day)
    where rent_no = #{rent_no}
  </update>

  <!-- =================== REVIEW ======================== -->
  <!-- 구매페이지 개별 새책 해당 책의 리뷰 띄우기 -->
  <select id="selectNewbookReviewList" parameterType="int" resultType="reviewdto">
    select *
    from review
    where review_bookno = #{review_bookno}
    order by review_date desc
  </select>

  <!-- 구매페이지 개별 새책 해당 책의 리뷰 쓰기 -->
  <insert id="insertNewbookReview" parameterType="reviewdto">
    insert into review
    values (default, #{review_id}, #{review_bookno}, #{review_context}, #{review_date}, #{review_rate}, #{review_gonggam})
  </insert>

  <!-- 구매페이지 개별 새책 해당 책의 특정 리뷰 추천 -->
  <select id="selectNewbookReview" parameterType="int" resultType="reviewdto">
    select *
    from review
    where review_no = #{review_no}
  </select>

  <update id="plusGonggam" parameterType="int">
    update review
    set review_gonggam = review_gonggam + 1
    where review_no = #{review_no};
  </update>

  <!-- 구매페이지 개별 새책 해당 책의 특정 리뷰 추천 -->
  <delete id="deleteReview" parameterType="int">
    delete
    from review
    where review_no = #{review_no};
  </delete>

  <!--  중고책 기증시 파일 입력을 위한 sql문 -->
  <insert id="insertFile" parameterType="hashmap">
    <selectKey keyProperty="idx" order="BEFORE" resultType="int">
      select ifnull(max(idx), 0)+1 from ob_file where ob_no=#{ob_no}
    </selectKey>
    <![CDATA[
	insert into ob_file(idx, ob_no, original_file_name,stored_file_name,file_size,ob_rdate,del_gb)
	values(default, #{ob_no}, #{original_file_name}, #{stored_file_name}, #{file_size},now(),default)
	]]>
  </insert>

</mapper>
